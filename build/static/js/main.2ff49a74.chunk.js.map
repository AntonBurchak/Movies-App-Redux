{"version":3,"sources":["core/types.js","core/configureStore.js","data.js","core/utils.js","core/reducer.js","core/rootReducer.js","serviceWorker.js","components/FilmInfo/FilmInfo.js","core/actions.js","components/Header/Header.js","components/Sort/Sort.js","components/Film/Film.js","components/FilmsList/FilmsList.js","components/SearchField/SearchField.js","App.js","index.js"],"names":["GET_FILMS_LIST","SET_FILMS_LIST","SEARCH_BY_TEXT","SORT_BY","RESET_SORTING","SET_LIKED_FILM","SET_DISLIKED_FILM","SET_STARS_ON_FILM","GENERATE_HASH","INSERT_FILM_INFO","devTools","f","process","browser","window","__REDUX_DEVTOOLS_EXTENSION__","configureStore","initialState","createStore","rootReducer","data","text","_originalFilms","filteredFilms","filter","film","filmTitle","title","toLocaleLowerCase","inputTitle","indexOf","length","updateFilmsArray","state","property","propertyValue","type","films","newFilm","index","disliked","liked","copyModifiedFilms","movies","viewed","combineReducers","filmlistReducer","action","utils","sorted","sort","a","b","id","find","maxLikes","likes","stars","Boolean","location","hostname","match","withConnect","connect","props","Fragment","className","src","posterUrl","alt","director","actors","join","genres","description","getFilmsList","payload","Header","Sort","this","sortBy","resetSorting","onClick","React","Component","mapDispatchToProps","Film","onStarsChange","e","value","target","getAttribute","setStarsOnFilm","currentQuantity","defaultQuantity","items","i","push","data-value","key","setLikedFilm","setDislikedFilm","insertFilmInfo","data-id","renderStars","FilmsList","map","SearchField","search","searchByText","onInput","placeholder","withProps","App","Math","random","toString","substring","store","ReactDOM","render","hash","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2ff49a74.chunk.js","sourcesContent":["export const GET_FILMS_LIST = 'GET_FILMS_LIST';\r\n\r\nexport const SET_FILMS_LIST = 'SET_FILMS_LIST';\r\n\r\nexport const SEARCH_BY_TEXT = 'SEARCH_BY_TEXT';\r\n\r\nexport const SORT_BY_LIKED = 'SORT_BY_LIKED';\r\n\r\nexport const SORT_BY_STARS = 'SORT_BY_STARS';\r\n\r\nexport const SORT_BY = 'SORT_BY';\r\n\r\nexport const RESET_SORTING = 'RESET_SORTING';\r\n\r\nexport const SET_LIKED_FILM = 'SET_LIKED_FILM';\r\n\r\nexport const SET_DISLIKED_FILM = 'SET_DISLIKED_FILM';\r\n\r\nexport const SET_STARS_ON_FILM = 'SET_STARS_ON_FILM';\r\n\r\nexport const UPDATE_FILMS_ARRAY = 'UPDATE_FILMS_ARRAY';\r\n\r\nexport const GENERATE_HASH = 'GENERATE_HASH';\r\n\r\nexport const INSERT_FILM_INFO = 'INSERT_FILM_INFO';","import { createStore } from 'redux'\r\nimport { rootReducer } from './rootReducer';\r\n\r\n\r\nlet devTools = f => f;\r\n\r\nconst enableReduxDevtools = process.browser\r\n    && process.env.NODE_ENV !== 'production'\r\n    && window.__REDUX_DEVTOOLS_EXTENSION__;\r\n\r\n\r\nif (enableReduxDevtools) {\r\n    devTools = window.__REDUX_DEVTOOLS_EXTENSION__();\r\n}    \r\n\r\n\r\nexport const configureStore = (initialState = {}) => createStore(\r\n    rootReducer,\r\n    initialState,\r\n    devTools\r\n) ","export const data = {\r\n    \"movies\": [\r\n        {\r\n            \"id\": 1,\r\n            \"title\": \"The Shawshank Redemption\",\r\n            \"posterUrl\": \"https://play-lh.googleusercontent.com/N8iLHUyPOkYbKI4GOtK36s7rxwXPY2nTv_yJjqH3-6CWp-3buYnI_Y85NBVgMEQBPTI\",\r\n            \"stars\": 4,\r\n            \"likes\": 3,\r\n            \"liked\": false,\r\n            \"genres\": [\"Crim\", \"Drama\"],\r\n            \"actors\": [\r\n                \"Tim Robbins\",\r\n                \"Morgan Freeman\",\r\n                \"Bob Gunton\"\r\n            ],\r\n            \"director\": \"Frank Darabont\",\r\n            \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"title\": \"Bad Boys for Life\",\r\n            \"posterUrl\": \"https://upload.wikimedia.org/wikipedia/en/9/90/Bad_Boys_for_Life_poster.jpg\",\r\n            \"stars\": 3,\r\n            \"likes\": 2,\r\n            \"liked\": false,\r\n            \"genres\": [\"Crim\", \"Drama\"],\r\n            \"actors\": [\r\n                \"Tim Robbins\",\r\n                \"Morgan Freeman\",\r\n                \"Bob Gunton\"\r\n            ],\r\n            \"director\": \"Frank Darabont\",\r\n            \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"title\": \"Sonic the Hedgehog\",\r\n            \"posterUrl\": \"https://upload.wikimedia.org/wikipedia/en/thumb/c/c1/Sonic_the_Hedgehog_poster.jpg/220px-Sonic_the_Hedgehog_poster.jpg\",\r\n            \"stars\": 5,\r\n            \"likes\": 13,\r\n            \"liked\": false,\r\n            \"genres\": [\"Crim\", \"Drama\"],\r\n            \"actors\": [\r\n                \"Tim Robbins\",\r\n                \"Morgan Freeman\",\r\n                \"Bob Gunton\"\r\n            ],\r\n            \"director\": \"Frank Darabont\",\r\n            \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"title\": \"Birds of Prey\",\r\n            \"posterUrl\": \"https://upload.wikimedia.org/wikipedia/en/6/60/Birds_of_Prey_%28and_the_Fantabulous_Emancipation_of_one_Harley_Quinn%29.jpg\",\r\n            \"stars\": 4,\r\n            \"likes\": 6,\r\n            \"liked\": false,\r\n            \"genres\": [\"Crim\", \"Drama\"],\r\n            \"actors\": [\r\n                \"Tim Robbins\",\r\n                \"Morgan Freeman\",\r\n                \"Bob Gunton\"\r\n            ],\r\n            \"director\": \"Frank Darabont\",\r\n            \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n        },\r\n        {\r\n            \"id\": 5,\r\n            \"title\": \"Dolittle*\",\r\n            \"posterUrl\": \"https://upload.wikimedia.org/wikipedia/en/1/1f/Dolittle_%282020_film_poster%29.png\",\r\n            \"stars\": 3,\r\n            \"likes\": 5,\r\n            \"liked\": false,\r\n            \"genres\": [\"Crim\", \"Drama\"],\r\n            \"actors\": [\r\n                \"Tim Robbins\",\r\n                \"Morgan Freeman\",\r\n                \"Bob Gunton\"\r\n            ],\r\n            \"director\": \"Frank Darabont\",\r\n            \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n        },\r\n        {\r\n            \"id\": 6,\r\n            \"title\": \"The Invisible Man\",\r\n            \"posterUrl\": \"https://upload.wikimedia.org/wikipedia/en/3/3a/The_Invisible_Man_%282020_film%29_-_release_poster.jpg\",\r\n            \"stars\": 5,\r\n            \"likes\": 13,\r\n            \"liked\": false,\r\n            \"genres\": [\"Crim\", \"Drama\"],\r\n            \"actors\": [\r\n                \"Tim Robbins\",\r\n                \"Morgan Freeman\",\r\n                \"Bob Gunton\"\r\n            ],\r\n            \"director\": \"Frank Darabont\",\r\n            \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n        }\r\n\r\n        \r\n    ]\r\n}\r\n","\r\nexport const SEARCH_BY_TEXT = (text, _originalFilms) => {\r\n    let filteredFilms = _originalFilms.filter(film => {\r\n        const filmTitle = film.title.toLocaleLowerCase();\r\n        const inputTitle = text.toLocaleLowerCase();\r\n\r\n        return filmTitle.indexOf(inputTitle) !== -1 ? true : false\r\n    });\r\n\r\n    if (text.length === 0) {\r\n        filteredFilms = _originalFilms;\r\n    }\r\n    return {\r\n        filteredFilms\r\n    }\r\n}\r\nexport const updateFilmsArray = (state, film, property, propertyValue, type) => {\r\n    const { films, _originalFilms } = state;\r\n\r\n    const newFilm = { ...film, [property]: propertyValue };\r\n    const updateFilmsArray = [...films];\r\n    const index = updateFilmsArray.indexOf(film);\r\n\r\n    switch (type) {\r\n      case 'dis':\r\n        newFilm.disliked = !newFilm.disliked;\r\n        break;\r\n      case 'like':\r\n        newFilm.liked = !newFilm.liked;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    newFilm[property] = propertyValue;\r\n    updateFilmsArray[index] = newFilm;\r\n\r\n    const copyModifiedFilms = [..._originalFilms];\r\n    copyModifiedFilms[index] = newFilm;\r\n    \r\n    return {\r\n      updateFilmsArray,\r\n      copyModifiedFilms\r\n    }\r\n  }","\r\nimport {GET_FILMS_LIST} from './types';\r\nimport {SET_FILMS_LIST} from './types';\r\nimport {SEARCH_BY_TEXT} from './types';\r\nimport {SORT_BY} from './types';\r\nimport {RESET_SORTING} from './types';\r\nimport {SET_LIKED_FILM} from './types'\r\nimport {SET_DISLIKED_FILM} from './types'\r\nimport {SET_STARS_ON_FILM} from './types'\r\nimport {INSERT_FILM_INFO} from './types'\r\n\r\n\r\nimport {data} from '../data'\r\nimport * as utils from './utils';\r\n\r\n\r\nconst initialState = {\r\n    films: data.movies,\r\n    _originalFilms: data.movies,\r\n    viewed: null\r\n}\r\n\r\nexport const filmlistReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        default: return state;\r\n        case GET_FILMS_LIST: {\r\n            return state\r\n        }\r\n\r\n        case SET_FILMS_LIST: {\r\n            return {...state, films: state.films}\r\n        }\r\n\r\n        case SEARCH_BY_TEXT: {\r\n            const { filteredFilms } = utils.SEARCH_BY_TEXT(action.text, state._originalFilms);\r\n\r\n            return {...state, films: filteredFilms}\r\n        }\r\n\r\n        case SORT_BY: {\r\n            const { films } = state, property = action.property;\r\n            const sorted = [...films].sort((a, b) => b[property] - a[property]);\r\n\r\n            return {...state, films: sorted}\r\n        }\r\n\r\n        case RESET_SORTING: {\r\n            return {...state, films: state._originalFilms}\r\n        }\r\n\r\n        case SET_LIKED_FILM: {\r\n            const { films } = state, { id } = action;\r\n            const film = films.find(film => film.id === id);\r\n\r\n            let maxLikes = film.likes;\r\n            if (!film.liked) {\r\n                ++maxLikes\r\n                film.disliked = false\r\n            } else {\r\n                --maxLikes\r\n            }\r\n\r\n            const {updateFilmsArray, copyModifiedFilms} = \r\n            utils.updateFilmsArray(state, film, 'likes', maxLikes, 'like')\r\n\r\n            return {...state, films: updateFilmsArray, _originalFilms: copyModifiedFilms}\r\n        }\r\n\r\n        case SET_DISLIKED_FILM: {\r\n            const { films } = state, { id } = action;\r\n            const film = films.find(film => film.id === id);\r\n\r\n            let maxLikes = film.likes;\r\n            if (film.liked) {\r\n              --maxLikes\r\n              film.liked = !film.liked\r\n            }\r\n\r\n            const { updateFilmsArray, copyModifiedFilms } = \r\n            utils.updateFilmsArray(state, film, 'likes', maxLikes, 'dislike')\r\n\r\n            return {...state, films: updateFilmsArray, _originalFilms: copyModifiedFilms}\r\n        }\r\n\r\n        case SET_STARS_ON_FILM: {\r\n            const { films } = state;\r\n            const { stars, id } = action;\r\n\r\n            const film = films.find(film => film.id === id);\r\n            \r\n            const { updateFilmsArray, copyModifiedFilms } = \r\n            utils.updateFilmsArray(state, film, 'stars', stars)\r\n\r\n            return {...state, films: updateFilmsArray, _originalFilms: copyModifiedFilms}\r\n        }\r\n        \r\n        case INSERT_FILM_INFO: {\r\n            const { films } = state, id = action.id;\r\n            const film = films.find(film => film.id === id);\r\n\r\n            return {...state, viewed: film}\r\n        }\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport {filmlistReducer} from './reducer'\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    filmlistReducer\r\n});","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './filminfo.scss';\r\n\r\nfunction FilmInfo(props) {\r\n    const { viewed } = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {viewed ? (\r\n                <React.Fragment>\r\n                    <div className=\"app__filminfo-left\">\r\n                        <b>{viewed.title}</b> <br />\r\n                        likes: {viewed.likes} <br />\r\n                        stars: {viewed.stars}\r\n                    </div>\r\n                    <div className=\"app__filminfo-right\">\r\n                        <img src={viewed.posterUrl} alt={viewed.title} />\r\n                        <p><b>Director:</b> {viewed.director}</p>\r\n                        <p><b>Actors:</b> {viewed.actors.join(', ')}</p>\r\n                        <p><b>Genres:</b> {viewed.genres.join(', ')}</p>\r\n                        <p><b>Description:</b> {viewed.description}</p>\r\n                    </div>\r\n                </React.Fragment>\r\n            ) : <h3>Выберите фильм</h3>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    viewed: state.filmlistReducer.viewed\r\n})\r\n\r\nconst withConnect = connect(\r\n    mapStateToProps\r\n)\r\nexport default withConnect(FilmInfo);","import {GET_FILMS_LIST} from './types'\r\nimport {SET_FILMS_LIST} from './types'\r\nimport {SEARCH_BY_TEXT} from './types'\r\nimport {SORT_BY} from './types'\r\nimport {RESET_SORTING} from './types'\r\nimport {SET_LIKED_FILM} from './types'\r\nimport {SET_DISLIKED_FILM} from './types'\r\nimport {SET_STARS_ON_FILM} from './types'\r\nimport {GENERATE_HASH} from './types'\r\nimport {INSERT_FILM_INFO} from './types'\r\n\r\nexport const getFilmsList = (payload) => ({\r\n    type: GET_FILMS_LIST,\r\n    payload\r\n}) \r\n\r\nexport const setFilmsList = (payload) => ({\r\n    type: SET_FILMS_LIST,\r\n    payload\r\n}) \r\n\r\nexport const searchByText = (payload) => ({\r\n    type: SEARCH_BY_TEXT,\r\n    text: payload\r\n})\r\n\r\nexport const sortBy = (payload) => ({\r\n    type: SORT_BY,\r\n    property: payload\r\n})\r\n\r\nexport const resetSorting = () => ({\r\n    type: RESET_SORTING\r\n})\r\n\r\nexport const setLikedFilm = (payload) => ({\r\n    type: SET_LIKED_FILM,\r\n    id: payload\r\n})\r\n\r\nexport const setDislikedFilm = (payload) => ({\r\n    type: SET_DISLIKED_FILM,\r\n    id: payload\r\n})\r\n\r\nexport const setStarsOnFilm = (id, stars) => ({\r\n    type: SET_STARS_ON_FILM,\r\n    id,\r\n    stars\r\n})\r\n\r\nexport const generateHash = () => ({\r\n    type: GENERATE_HASH\r\n})\r\n\r\nexport const insertFilmInfo = (id) => ({\r\n    type: INSERT_FILM_INFO,\r\n    id\r\n})\r\n\r\n","import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Movies</h2>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport {Header};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { sortBy, resetSorting } from '../../core/actions';\r\nclass Sort extends React.Component {\r\n\r\n    render() {\r\n        const { sortBy, resetSorting } = this.props;\r\n\r\n        return (\r\n            <div className=\"app__sort\">\r\n                <h4>Sort movies</h4>\r\n                <button onClick={() => sortBy('likes')}>by likes</button>\r\n                <button onClick={() => sortBy('stars')}>by rating</button>\r\n                <button onClick={resetSorting}>reset</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    films: state.filmlistReducer.films\r\n  })\r\n  const mapDispatchToProps = ({\r\n    sortBy,\r\n    resetSorting\r\n  })\r\n  \r\n  const withConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )\r\n  export default withConnect(Sort);\r\n  ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setLikedFilm, setDislikedFilm, insertFilmInfo, setStarsOnFilm } from '../../core/actions';\r\nclass Film extends React.Component {\r\n\r\n    onStarsChange = (e) => {\r\n        const value = e.target.getAttribute('data-value')\r\n        const { setStarsOnFilm, film } = this.props;\r\n        setStarsOnFilm(film.id, value);\r\n    }\r\n\r\n    renderStars(currentQuantity, defaultQuantity = 5) {\r\n        const items = [];\r\n        const { film } = this.props;\r\n\r\n        for (let i = 0; i < defaultQuantity; i++) {\r\n            if (i < film.stars) {\r\n                items.push(\r\n                    <button className=\"star-btn\"\r\n                        data-value={i + 1}\r\n                        onClick={this.onStarsChange}\r\n                        key={i}>\r\n\r\n                        <i className=\"fa fa-star star-active\"\r\n                            data-value={i + 1}></i>\r\n                    </button>\r\n                )\r\n            } else {\r\n                items.push(\r\n                    <button className=\"star-btn\"\r\n                        data-value={i + 1}\r\n                        onClick={this.onStarsChange}\r\n                        key={i}>\r\n\r\n                        <i className=\"fa fa-star\"\r\n                            data-value={i + 1}></i>\r\n                    </button>\r\n                )\r\n            }\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {items}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { film, setLikedFilm, setDislikedFilm, insertFilmInfo } = this.props;\r\n\r\n\r\n        return (\r\n            <div className=\"app__films-item film\" data-id={film.id}>\r\n                <div className=\"film__main\">\r\n                    <div className=\"film__likes\">\r\n                        <div className=\"film__btns\">\r\n                            <button className={\"film__likes-btn like\" + (film.liked ? \" active\" : \"\")}\r\n                                onClick={() => setLikedFilm(film.id)}>\r\n\r\n                                <i className=\"fa fa-thumbs-up\"></i>\r\n\r\n                            </button>\r\n\r\n                            <button className={\"film__likes-btn dislike\" + (film.disliked ? \" active\" : \"\")}\r\n                                onClick={() => setDislikedFilm(film.id)}>\r\n\r\n                                <i className=\"fa fa-thumbs-down\"></i>\r\n\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"film__likes-main\">\r\n                            <span>{film.likes}</span>\r\n                            <span>likes</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"film__preview\">\r\n\r\n                        <h3 className=\"film__title\" onClick={() => insertFilmInfo(film.id)}>{film.title}</h3>\r\n\r\n                        <div className=\"film__image\">\r\n\r\n                            <img src={film.posterUrl}\r\n                                alt={film.title} />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"film__stars\">\r\n                    <span>Stars: {film.stars}</span>\r\n                    {this.renderStars()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    films: state.filmlistReducer.films\r\n  })\r\n  const mapDispatchToProps = ({\r\n    setLikedFilm, \r\n    setDislikedFilm, \r\n    insertFilmInfo, \r\n    setStarsOnFilm \r\n  })\r\n  \r\n  const withConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )\r\n  export default withConnect(Film);\r\n  ","import React from 'react';\r\nimport Film from '../Film/Film'\r\nimport { connect } from 'react-redux';\r\nimport { getFilmsList } from '../../core/actions';\r\n\r\n\r\nimport './films.scss'\r\n\r\nclass FilmsList extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        const {getFilmsList} = this.props;\r\n        getFilmsList();\r\n    }\r\n\r\n    render () {\r\n        const { films } = this.props;\r\n        \r\n        return (\r\n            \r\n            <div className=\"app__films\">\r\n                {films.map((film, index) => {\r\n                    return (\r\n                        <Film key={index} film={film}/>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    films: state.filmlistReducer.films\r\n})\r\nconst mapDispatchToProps = ({\r\n    getFilmsList\r\n})\r\n\r\nconst withConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)\r\nexport default withConnect(FilmsList);","import React from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { searchByText } from '../../core/actions'\r\nclass SearchField extends React.Component {\r\n\r\n    search = (e) => {   \r\n        const {searchByText} = this.props;\r\n        searchByText(e.target.value)   \r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"app__search\">\r\n                <input type=\"text\" onInput={this.search} placeholder=\"Введите название фильма\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    films: state.filmlistReducer.films\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n    searchByText\r\n})\r\n\r\nconst withProps = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)\r\nexport default withProps(SearchField);","import React from 'react';\r\nimport './App.scss';\r\n\r\n\r\nimport FilmInfo from './components/FilmInfo/FilmInfo';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getFilmsList } from './core/actions';\r\n\r\n\r\nimport { Header } from './components/Header/Header'\r\nimport Sort from './components/Sort/Sort'\r\nimport FilmsList from './components/FilmsList/FilmsList'\r\nimport SearchField from './components/SearchField/SearchField'\r\n\r\nclass App extends React.Component {\r\n\r\n  generateHash() {\r\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"app__list\">\r\n          <Header />\r\n          <SearchField />\r\n          <Sort />\r\n          <FilmsList />\r\n        </div>\r\n        <div className=\"app__filminfo\">\r\n          <FilmInfo />\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  films: state.filmlistReducer.films\r\n})\r\nconst mapDispatchToProps = ({\r\n  getFilmsList,\r\n})\r\n\r\nconst withConnect = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)\r\nexport default withConnect(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'normalize-scss'\r\nimport './index.css';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from './App';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './core/configureStore'\r\n\r\nconst store = configureStore();\r\n\r\nconst generateHash = () => {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n}\r\nReactDOM.render(\r\n  <Provider store={store} hash={generateHash}>\r\n    <App />\r\n  </Provider>\r\n  \r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}